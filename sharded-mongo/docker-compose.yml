version: '2.1'

services:
  mongo_rs1:
    container_name: mongo_rs1
    image: mongo:3.2
    command: mongod --port 30101 --replSet rs1 --shardsvr
    network_mode: "host"
    ports:
      - "30101:30101"
    healthcheck:
      test: ["CMD", "echo", "'db.stats().ok'", "|", "mongo"]
      interval: 1s
      retries: 20
      timeout: 2s

  mongo_rs2:
    container_name: mongo_rs2
    image: mongo:3.2
    command: mongod --port 30201 --replSet rs2 --shardsvr
    network_mode: "host"
    ports:
      - "30201:30201"
    healthcheck:
      test: ["CMD", "echo", "'db.stats().ok'", "|", "mongo"]
      interval: 1s
      retries: 20
      timeout: 2s

  mongo_rs3:
    container_name: mongo_rs3
    image: mongo:3.2
    command: mongod --port 30301 --replSet rs3 --shardsvr
    network_mode: "host"
    ports:
      - "30301:30301"
    healthcheck:
      test: ["CMD", "echo", "'db.stats().ok'", "|", "mongo"]
      interval: 1s
      retries: 20
      timeout: 2s

  mongo_conf1:
    container_name: mongo_conf1
    image: mongo:3.2
    command: mongod --configsvr --port 30001
    network_mode: "host"
    ports:
      - "30001:30001"
    healthcheck:
      test: ["CMD", "echo", "'db.stats().ok'", "|", "mongo"]
      interval: 1s
      retries: 20
      timeout: 2s

  mongo_conf2:
    container_name: mongo_conf2
    image: mongo:3.2
    command: mongod --configsvr --port 30002
    network_mode: "host"
    ports:
      - "30002:30002"
    healthcheck:
      test: ["CMD", "echo", "'db.stats().ok'", "|", "mongo"]
      interval: 1s
      retries: 20
      timeout: 2s

  mongo_conf3:
    container_name: mongo_conf3
    image: mongo:3.2
    command: mongod --configsvr --port 30003
    network_mode: "host"
    ports:
      - "30003:30003"
    healthcheck:
      test: ["CMD", "echo", "'db.stats().ok'", "|", "mongo"]
      interval: 1s
      retries: 20
      timeout: 2s

  mongos:
    container_name: mongos
    image: mongo:3.2
    command: mongos --configdb localhost:30001,localhost:30002,localhost:30003 --port 30000
    depends_on:
      mongo_rs1:
        condition: service_healthy
      mongo_rs2:
        condition: service_healthy
      mongo_rs3:
        condition: service_healthy
      mongo_conf1:
        condition: service_healthy
      mongo_conf2:
        condition: service_healthy
      mongo_conf3:
        condition: service_healthy
    network_mode: "host"
